[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bodyscript"
version = "1.0.0"
description = "BodyScript pose estimation system"
authors = [{name = "BodyScript Project"}]
license = {text = "MIT"}
requires-python = ">=3.9"
dependencies = [
    "mediapipe>=0.10.7",
    "opencv-python>=4.8.1",
    "pandas>=2.1.3",
    "numpy>=1.24.3",
    "matplotlib>=3.7.2"
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0"
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=cli/src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=json:coverage.json"
]
testpaths = [
    "tests/python"
]
python_files = [
    "test_*.py",
    "*_test.py"
]
python_classes = [
    "Test*"
]
python_functions = [
    "test_*"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests that require external resources"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

[tool.coverage.run]
source = ["cli/src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv*/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]